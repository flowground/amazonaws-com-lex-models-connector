{
    "type": "object",
    "properties": {
        "name": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "example": {
                "abortStatement": {
                    "messages": [
                        {
                            "content": "I don't understand. Can you try again?",
                            "contentType": "PlainText"
                        },
                        {
                            "content": "I'm sorry, I don't understand.",
                            "contentType": "PlainText"
                        }
                    ]
                },
                "childDirected": true,
                "clarificationPrompt": {
                    "maxAttempts": 1,
                    "messages": [
                        {
                            "content": "I'm sorry, I didn't hear that. Can you repeate what you just said?",
                            "contentType": "PlainText"
                        },
                        {
                            "content": "Can you say that again?",
                            "contentType": "PlainText"
                        }
                    ]
                },
                "description": "Orders a pizza from a local pizzeria.",
                "idleSessionTTLInSeconds": 300,
                "intents": [
                    {
                        "intentName": "DocOrderPizza",
                        "intentVersion": "$LATEST"
                    }
                ],
                "locale": "en-US",
                "name": "DocOrderPizzaBot",
                "processBehavior": "SAVE"
            },
            "properties": {
                "abortStatement": {
                    "description": "<p>When Amazon Lex can't understand the user's input in context, it tries to elicit the information a few times. After that, Amazon Lex sends the message defined in <code>abortStatement</code> to the user, and then aborts the conversation. To set the number of retries, use the <code>valueElicitationPrompt</code> field for the slot type. </p> <p>For example, in a pizza ordering bot, Amazon Lex might ask a user \"What type of crust would you like?\" If the user's response is not one of the expected responses (for example, \"thin crust, \"deep dish,\" etc.), Amazon Lex tries to elicit a correct response a few more times. </p> <p>For example, in a pizza ordering application, <code>OrderPizza</code> might be one of the intents. This intent might require the <code>CrustType</code> slot. You specify the <code>valueElicitationPrompt</code> field when you create the <code>CrustType</code> slot.</p>",
                    "properties": {
                        "messages": {
                            "description": "A collection of message objects.",
                            "items": {
                                "description": "The message object that provides the message text and its type.",
                                "properties": {
                                    "content": {
                                        "description": "The text of the message.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "contentType": {
                                        "description": "The content type of the message string.",
                                        "enum": [
                                            "PlainText",
                                            "SSML",
                                            "CustomPayload"
                                        ],
                                        "type": "string"
                                    },
                                    "groupNumber": {
                                        "description": "Identifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "contentType",
                                    "content"
                                ],
                                "type": "object"
                            },
                            "maxItems": 15,
                            "minItems": 1,
                            "type": "array"
                        },
                        "responseCard": {
                            "description": " At runtime, if the client is using the <a href=\"http://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html\">PostText</a> API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card. ",
                            "maxLength": 50000,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "required": [
                        "messages"
                    ],
                    "type": "object"
                },
                "checksum": {
                    "description": "<p>Identifies a specific revision of the <code>$LATEST</code> version.</p> <p>When you create a new bot, leave the <code>checksum</code> field blank. If you specify a checksum you get a <code>BadRequestException</code> exception.</p> <p>When you want to update a bot, set the <code>checksum</code> field to the checksum of the most recent revision of the <code>$LATEST</code> version. If you don't specify the <code> checksum</code> field, or if the checksum does not match the <code>$LATEST</code> version, you get a <code>PreconditionFailedException</code> exception.</p>",
                    "type": "string"
                },
                "childDirected": {
                    "description": "<p>For each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying <code>true</code> or <code>false</code> in the <code>childDirected</code> field. By specifying <code>true</code> in the <code>childDirected</code> field, you confirm that your use of Amazon Lex <b>is</b> related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying <code>false</code> in the <code>childDirected</code> field, you confirm that your use of Amazon Lex <b>is not</b> related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the <code>childDirected</code> field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA.</p> <p>If your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the <a href=\"https://aws.amazon.com/lex/faqs#data-security\">Amazon Lex FAQ.</a> </p>",
                    "type": "boolean"
                },
                "clarificationPrompt": {
                    "description": "<p>When Amazon Lex doesn't understand the user's intent, it uses this message to get clarification. To specify how many times Amazon Lex should repeate the clarification prompt, use the <code>maxAttempts</code> field. If Amazon Lex still doesn't understand, it sends the message in the <code>abortStatement</code> field. </p> <p>When you create a clarification prompt, make sure that it suggests the correct response from the user. for example, for a bot that orders pizza and drinks, you might create this clarification prompt: \"What would you like to do? You can say 'Order a pizza' or 'Order a drink.'\"</p>",
                    "properties": {
                        "maxAttempts": {
                            "description": "The number of times to prompt the user for information.",
                            "maximum": 5,
                            "minimum": 1,
                            "type": "integer"
                        },
                        "messages": {
                            "description": "An array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).",
                            "items": {
                                "description": "The message object that provides the message text and its type.",
                                "properties": {
                                    "content": {
                                        "description": "The text of the message.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "contentType": {
                                        "description": "The content type of the message string.",
                                        "enum": [
                                            "PlainText",
                                            "SSML",
                                            "CustomPayload"
                                        ],
                                        "type": "string"
                                    },
                                    "groupNumber": {
                                        "description": "Identifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "contentType",
                                    "content"
                                ],
                                "type": "object"
                            },
                            "maxItems": 15,
                            "minItems": 1,
                            "type": "array"
                        },
                        "responseCard": {
                            "description": "A response card. Amazon Lex uses this prompt at runtime, in the <code>PostText</code> API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see <a>ex-resp-card</a>. ",
                            "maxLength": 50000,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "required": [
                        "messages",
                        "maxAttempts"
                    ],
                    "type": "object"
                },
                "createVersion": {
                    "type": "boolean"
                },
                "description": {
                    "description": "A description of the bot.",
                    "maxLength": 200,
                    "minLength": 0,
                    "type": "string"
                },
                "idleSessionTTLInSeconds": {
                    "description": "<p>The maximum time in seconds that Amazon Lex retains the data gathered in a conversation.</p> <p>A user interaction session remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout.</p> <p>For example, suppose that a user chooses the OrderPizza intent, but gets sidetracked halfway through placing an order. If the user doesn't complete the order within the specified time, Amazon Lex discards the slot information that it gathered, and the user must start over.</p> <p>If you don't include the <code>idleSessionTTLInSeconds</code> element in a <code>PutBot</code> operation request, Amazon Lex uses the default value. This is also true if the request replaces an existing bot.</p> <p>The default is 300 seconds (5 minutes).</p>",
                    "maximum": 86400,
                    "minimum": 60,
                    "type": "integer"
                },
                "intents": {
                    "description": "An array of <code>Intent</code> objects. Each intent represents a command that a user can express. For example, a pizza ordering bot might support an OrderPizza intent. For more information, see <a>how-it-works</a>.",
                    "items": {
                        "description": "Identifies the specific version of an intent.",
                        "properties": {
                            "intentName": {
                                "description": "The name of the intent.",
                                "maxLength": 100,
                                "minLength": 1,
                                "pattern": "^([A-Za-z]_?)+$",
                                "type": "string"
                            },
                            "intentVersion": {
                                "description": "The version of the intent.",
                                "maxLength": 64,
                                "minLength": 1,
                                "pattern": "\\$LATEST|[0-9]+",
                                "type": "string"
                            }
                        },
                        "required": [
                            "intentName",
                            "intentVersion"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "locale": {
                    "description": "<p> Specifies the target locale for the bot. Any intent used in the bot must be compatible with the locale of the bot. </p> <p>The default is <code>en-US</code>.</p>",
                    "enum": [
                        "en-US",
                        "en-GB",
                        "de-DE"
                    ],
                    "type": "string"
                },
                "processBehavior": {
                    "description": "<p>If you set the <code>processBehavior</code> element to <code>BUILD</code>, Amazon Lex builds the bot so that it can be run. If you set the element to <code>SAVE</code> Amazon Lex saves the bot, but doesn't build it. </p> <p>If you don't specify this value, the default value is <code>BUILD</code>.</p>",
                    "enum": [
                        "SAVE",
                        "BUILD"
                    ],
                    "type": "string"
                },
                "voiceId": {
                    "description": "The Amazon Polly voice ID that you want Amazon Lex to use for voice interactions with the user. The locale configured for the voice must match the locale of the bot. For more information, see <a href=\"http://docs.aws.amazon.com/polly/latest/dg/voicelist.html\">Available Voices</a> in the <i>Amazon Polly Developer Guide</i>.",
                    "type": "string"
                }
            },
            "required": [
                "locale",
                "childDirected"
            ],
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}