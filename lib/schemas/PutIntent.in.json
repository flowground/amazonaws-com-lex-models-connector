{
    "type": "object",
    "properties": {
        "name": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "example": {
                "conclusionStatement": {
                    "messages": [
                        {
                            "content": "All right, I ordered  you a {Crust} crust {Type} pizza with {Sauce} sauce.",
                            "contentType": "PlainText"
                        },
                        {
                            "content": "OK, your {Crust} crust {Type} pizza with {Sauce} sauce is on the way.",
                            "contentType": "PlainText"
                        }
                    ],
                    "responseCard": "foo"
                },
                "confirmationPrompt": {
                    "maxAttempts": 1,
                    "messages": [
                        {
                            "content": "Should I order  your {Crust} crust {Type} pizza with {Sauce} sauce?",
                            "contentType": "PlainText"
                        }
                    ]
                },
                "description": "Order a pizza from a local pizzeria.",
                "fulfillmentActivity": {
                    "type": "ReturnIntent"
                },
                "name": "DocOrderPizza",
                "rejectionStatement": {
                    "messages": [
                        {
                            "content": "Ok, I'll cancel your order.",
                            "contentType": "PlainText"
                        },
                        {
                            "content": "I cancelled your order.",
                            "contentType": "PlainText"
                        }
                    ]
                },
                "sampleUtterances": [
                    "Order me a pizza.",
                    "Order me a {Type} pizza.",
                    "I want a {Crust} crust {Type} pizza",
                    "I want a {Crust} crust {Type} pizza with {Sauce} sauce."
                ],
                "slots": [
                    {
                        "description": "The type of pizza to order.",
                        "name": "Type",
                        "priority": 1,
                        "sampleUtterances": [
                            "Get me a {Type} pizza.",
                            "A {Type} pizza please.",
                            "I'd like a {Type} pizza."
                        ],
                        "slotConstraint": "Required",
                        "slotType": "DocPizzaType",
                        "slotTypeVersion": "$LATEST",
                        "valueElicitationPrompt": {
                            "maxAttempts": 1,
                            "messages": [
                                {
                                    "content": "What type of pizza would you like?",
                                    "contentType": "PlainText"
                                },
                                {
                                    "content": "Vegie or cheese pizza?",
                                    "contentType": "PlainText"
                                },
                                {
                                    "content": "I can get you a vegie or a cheese pizza.",
                                    "contentType": "PlainText"
                                }
                            ]
                        }
                    },
                    {
                        "description": "The type of pizza crust to order.",
                        "name": "Crust",
                        "priority": 2,
                        "sampleUtterances": [
                            "Make it a {Crust} crust.",
                            "I'd like a {Crust} crust."
                        ],
                        "slotConstraint": "Required",
                        "slotType": "DocPizzaCrustType",
                        "slotTypeVersion": "$LATEST",
                        "valueElicitationPrompt": {
                            "maxAttempts": 1,
                            "messages": [
                                {
                                    "content": "What type of crust would you like?",
                                    "contentType": "PlainText"
                                },
                                {
                                    "content": "Thick or thin crust?",
                                    "contentType": "PlainText"
                                }
                            ]
                        }
                    },
                    {
                        "description": "The type of sauce to use on the pizza.",
                        "name": "Sauce",
                        "priority": 3,
                        "sampleUtterances": [
                            "Make it {Sauce} sauce.",
                            "I'd like {Sauce} sauce."
                        ],
                        "slotConstraint": "Required",
                        "slotType": "DocPizzaSauceType",
                        "slotTypeVersion": "$LATEST",
                        "valueElicitationPrompt": {
                            "maxAttempts": 1,
                            "messages": [
                                {
                                    "content": "White or red sauce?",
                                    "contentType": "PlainText"
                                },
                                {
                                    "content": "Garlic or tomato sauce?",
                                    "contentType": "PlainText"
                                }
                            ]
                        }
                    }
                ]
            },
            "properties": {
                "checksum": {
                    "description": "<p>Identifies a specific revision of the <code>$LATEST</code> version.</p> <p>When you create a new intent, leave the <code>checksum</code> field blank. If you specify a checksum you get a <code>BadRequestException</code> exception.</p> <p>When you want to update a intent, set the <code>checksum</code> field to the checksum of the most recent revision of the <code>$LATEST</code> version. If you don't specify the <code> checksum</code> field, or if the checksum does not match the <code>$LATEST</code> version, you get a <code>PreconditionFailedException</code> exception.</p>",
                    "type": "string"
                },
                "conclusionStatement": {
                    "description": "<p> The statement that you want Amazon Lex to convey to the user after the intent is successfully fulfilled by the Lambda function. </p> <p>This element is relevant only if you provide a Lambda function in the <code>fulfillmentActivity</code>. If you return the intent to the client application, you can't specify this element.</p> <note> <p>The <code>followUpPrompt</code> and <code>conclusionStatement</code> are mutually exclusive. You can specify only one.</p> </note>",
                    "properties": {
                        "messages": {
                            "description": "A collection of message objects.",
                            "items": {
                                "description": "The message object that provides the message text and its type.",
                                "properties": {
                                    "content": {
                                        "description": "The text of the message.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "contentType": {
                                        "description": "The content type of the message string.",
                                        "enum": [
                                            "PlainText",
                                            "SSML",
                                            "CustomPayload"
                                        ],
                                        "type": "string"
                                    },
                                    "groupNumber": {
                                        "description": "Identifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "contentType",
                                    "content"
                                ],
                                "type": "object"
                            },
                            "maxItems": 15,
                            "minItems": 1,
                            "type": "array"
                        },
                        "responseCard": {
                            "description": " At runtime, if the client is using the <a href=\"http://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html\">PostText</a> API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card. ",
                            "maxLength": 50000,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "required": [
                        "messages"
                    ],
                    "type": "object"
                },
                "confirmationPrompt": {
                    "description": "<p>Prompts the user to confirm the intent. This question should have a yes or no answer.</p> <p>Amazon Lex uses this prompt to ensure that the user acknowledges that the intent is ready for fulfillment. For example, with the <code>OrderPizza</code> intent, you might want to confirm that the order is correct before placing it. For other intents, such as intents that simply respond to user questions, you might not need to ask the user for confirmation before providing the information. </p> <note> <p>You you must provide both the <code>rejectionStatement</code> and the <code>confirmationPrompt</code>, or neither.</p> </note>",
                    "properties": {
                        "maxAttempts": {
                            "description": "The number of times to prompt the user for information.",
                            "maximum": 5,
                            "minimum": 1,
                            "type": "integer"
                        },
                        "messages": {
                            "description": "An array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).",
                            "items": {
                                "description": "The message object that provides the message text and its type.",
                                "properties": {
                                    "content": {
                                        "description": "The text of the message.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "contentType": {
                                        "description": "The content type of the message string.",
                                        "enum": [
                                            "PlainText",
                                            "SSML",
                                            "CustomPayload"
                                        ],
                                        "type": "string"
                                    },
                                    "groupNumber": {
                                        "description": "Identifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "contentType",
                                    "content"
                                ],
                                "type": "object"
                            },
                            "maxItems": 15,
                            "minItems": 1,
                            "type": "array"
                        },
                        "responseCard": {
                            "description": "A response card. Amazon Lex uses this prompt at runtime, in the <code>PostText</code> API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see <a>ex-resp-card</a>. ",
                            "maxLength": 50000,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "required": [
                        "messages",
                        "maxAttempts"
                    ],
                    "type": "object"
                },
                "createVersion": {
                    "type": "boolean"
                },
                "description": {
                    "description": "A description of the intent.",
                    "maxLength": 200,
                    "minLength": 0,
                    "type": "string"
                },
                "dialogCodeHook": {
                    "description": "<p> Specifies a Lambda function to invoke for each user input. You can invoke this Lambda function to personalize user interaction. </p> <p>For example, suppose your bot determines that the user is John. Your Lambda function might retrieve John's information from a backend database and prepopulate some of the values. For example, if you find that John is gluten intolerant, you might set the corresponding intent slot, <code>GlutenIntolerant</code>, to true. You might find John's phone number and set the corresponding session attribute. </p>",
                    "properties": {
                        "messageVersion": {
                            "description": "The version of the request-response that you want Amazon Lex to use to invoke your Lambda function. For more information, see <a>using-lambda</a>.",
                            "maxLength": 5,
                            "minLength": 1,
                            "type": "string"
                        },
                        "uri": {
                            "description": "The Amazon Resource Name (ARN) of the Lambda function.",
                            "maxLength": 2048,
                            "minLength": 20,
                            "pattern": "arn:aws:lambda:[a-z]+-[a-z]+-[0-9]:[0-9]{12}:function:[a-zA-Z0-9-_]+(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?(:[a-zA-Z0-9-_]+)?",
                            "type": "string"
                        }
                    },
                    "required": [
                        "uri",
                        "messageVersion"
                    ],
                    "type": "object"
                },
                "followUpPrompt": {
                    "description": "<p>Amazon Lex uses this prompt to solicit additional activity after fulfilling an intent. For example, after the <code>OrderPizza</code> intent is fulfilled, you might prompt the user to order a drink.</p> <p>The action that Amazon Lex takes depends on the user's response, as follows:</p> <ul> <li> <p>If the user says \"Yes\" it responds with the clarification prompt that is configured for the bot.</p> </li> <li> <p>if the user says \"Yes\" and continues with an utterance that triggers an intent it starts a conversation for the intent.</p> </li> <li> <p>If the user says \"No\" it responds with the rejection statement configured for the the follow-up prompt.</p> </li> <li> <p>If it doesn't recognize the utterance it repeats the follow-up prompt again.</p> </li> </ul> <p>The <code>followUpPrompt</code> field and the <code>conclusionStatement</code> field are mutually exclusive. You can specify only one. </p>",
                    "properties": {
                        "prompt": {
                            "description": "Prompts for information from the user. ",
                            "properties": {
                                "maxAttempts": {
                                    "description": "The number of times to prompt the user for information.",
                                    "maximum": 5,
                                    "minimum": 1,
                                    "type": "integer"
                                },
                                "messages": {
                                    "description": "An array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).",
                                    "items": {
                                        "description": "The message object that provides the message text and its type.",
                                        "properties": {
                                            "content": {
                                                "description": "The text of the message.",
                                                "maxLength": 1000,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "contentType": {
                                                "description": "The content type of the message string.",
                                                "enum": [
                                                    "PlainText",
                                                    "SSML",
                                                    "CustomPayload"
                                                ],
                                                "type": "string"
                                            },
                                            "groupNumber": {
                                                "description": "Identifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.",
                                                "maximum": 5,
                                                "minimum": 1,
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "contentType",
                                            "content"
                                        ],
                                        "type": "object"
                                    },
                                    "maxItems": 15,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "responseCard": {
                                    "description": "A response card. Amazon Lex uses this prompt at runtime, in the <code>PostText</code> API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see <a>ex-resp-card</a>. ",
                                    "maxLength": 50000,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "messages",
                                "maxAttempts"
                            ],
                            "type": "object"
                        },
                        "rejectionStatement": {
                            "description": "If the user answers \"no\" to the question defined in the <code>prompt</code> field, Amazon Lex responds with this statement to acknowledge that the intent was canceled. ",
                            "properties": {
                                "messages": {
                                    "description": "A collection of message objects.",
                                    "items": {
                                        "description": "The message object that provides the message text and its type.",
                                        "properties": {
                                            "content": {
                                                "description": "The text of the message.",
                                                "maxLength": 1000,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "contentType": {
                                                "description": "The content type of the message string.",
                                                "enum": [
                                                    "PlainText",
                                                    "SSML",
                                                    "CustomPayload"
                                                ],
                                                "type": "string"
                                            },
                                            "groupNumber": {
                                                "description": "Identifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.",
                                                "maximum": 5,
                                                "minimum": 1,
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "contentType",
                                            "content"
                                        ],
                                        "type": "object"
                                    },
                                    "maxItems": 15,
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "responseCard": {
                                    "description": " At runtime, if the client is using the <a href=\"http://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html\">PostText</a> API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card. ",
                                    "maxLength": 50000,
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "messages"
                            ],
                            "type": "object"
                        }
                    },
                    "required": [
                        "prompt",
                        "rejectionStatement"
                    ],
                    "type": "object"
                },
                "fulfillmentActivity": {
                    "description": "<p>Required. Describes how the intent is fulfilled. For example, after a user provides all of the information for a pizza order, <code>fulfillmentActivity</code> defines how the bot places an order with a local pizza store. </p> <p> You might configure Amazon Lex to return all of the intent information to the client application, or direct it to invoke a Lambda function that can process the intent (for example, place an order with a pizzeria). </p>",
                    "properties": {
                        "codeHook": {
                            "description": " A description of the Lambda function that is run to fulfill the intent. ",
                            "properties": {
                                "messageVersion": {
                                    "description": "The version of the request-response that you want Amazon Lex to use to invoke your Lambda function. For more information, see <a>using-lambda</a>.",
                                    "maxLength": 5,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "uri": {
                                    "description": "The Amazon Resource Name (ARN) of the Lambda function.",
                                    "maxLength": 2048,
                                    "minLength": 20,
                                    "pattern": "arn:aws:lambda:[a-z]+-[a-z]+-[0-9]:[0-9]{12}:function:[a-zA-Z0-9-_]+(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?(:[a-zA-Z0-9-_]+)?",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "uri",
                                "messageVersion"
                            ],
                            "type": "object"
                        },
                        "type": {
                            "description": " How the intent should be fulfilled, either by running a Lambda function or by returning the slot data to the client application. ",
                            "enum": [
                                "ReturnIntent",
                                "CodeHook"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "type"
                    ],
                    "type": "object"
                },
                "parentIntentSignature": {
                    "description": "A unique identifier for the built-in intent to base this intent on. To find the signature for an intent, see <a href=\"https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents\">Standard Built-in Intents</a> in the <i>Alexa Skills Kit</i>.",
                    "type": "string"
                },
                "rejectionStatement": {
                    "description": "<p>When the user answers \"no\" to the question defined in <code>confirmationPrompt</code>, Amazon Lex responds with this statement to acknowledge that the intent was canceled. </p> <note> <p>You must provide both the <code>rejectionStatement</code> and the <code>confirmationPrompt</code>, or neither.</p> </note>",
                    "properties": {
                        "messages": {
                            "description": "A collection of message objects.",
                            "items": {
                                "description": "The message object that provides the message text and its type.",
                                "properties": {
                                    "content": {
                                        "description": "The text of the message.",
                                        "maxLength": 1000,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "contentType": {
                                        "description": "The content type of the message string.",
                                        "enum": [
                                            "PlainText",
                                            "SSML",
                                            "CustomPayload"
                                        ],
                                        "type": "string"
                                    },
                                    "groupNumber": {
                                        "description": "Identifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "contentType",
                                    "content"
                                ],
                                "type": "object"
                            },
                            "maxItems": 15,
                            "minItems": 1,
                            "type": "array"
                        },
                        "responseCard": {
                            "description": " At runtime, if the client is using the <a href=\"http://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html\">PostText</a> API, Amazon Lex includes the response card in the response. It substitutes all of the session attributes and slot values for placeholders in the response card. ",
                            "maxLength": 50000,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "required": [
                        "messages"
                    ],
                    "type": "object"
                },
                "sampleUtterances": {
                    "description": "<p>An array of utterances (strings) that a user might say to signal the intent. For example, \"I want {PizzaSize} pizza\", \"Order {Quantity} {PizzaSize} pizzas\". </p> <p>In each utterance, a slot name is enclosed in curly braces. </p>",
                    "items": {
                        "maxLength": 200,
                        "minLength": 1,
                        "type": "string"
                    },
                    "maxItems": 1500,
                    "minItems": 0,
                    "type": "array"
                },
                "slots": {
                    "description": "An array of intent slots. At runtime, Amazon Lex elicits required slot values from the user using prompts defined in the slots. For more information, see <a>how-it-works</a>. ",
                    "items": {
                        "description": "Identifies the version of a specific slot.",
                        "properties": {
                            "description": {
                                "description": "A description of the slot.",
                                "maxLength": 200,
                                "minLength": 0,
                                "type": "string"
                            },
                            "name": {
                                "description": "The name of the slot.",
                                "maxLength": 100,
                                "minLength": 1,
                                "pattern": "^([A-Za-z](-|_|.)?)+$",
                                "type": "string"
                            },
                            "priority": {
                                "description": "<p> Directs Lex the order in which to elicit this slot value from the user. For example, if the intent has two slots with priorities 1 and 2, AWS Lex first elicits a value for the slot with priority 1.</p> <p>If multiple slots share the same priority, the order in which Lex elicits values is arbitrary.</p>",
                                "maximum": 100,
                                "minimum": 0,
                                "type": "integer"
                            },
                            "responseCard": {
                                "description": " A set of possible responses for the slot type used by text-based clients. A user chooses an option from the response card, instead of using text to reply. ",
                                "maxLength": 50000,
                                "minLength": 1,
                                "type": "string"
                            },
                            "sampleUtterances": {
                                "description": " If you know a specific pattern with which users might respond to an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This is optional. In most cases, Amazon Lex is capable of understanding user utterances. ",
                                "items": {
                                    "maxLength": 200,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "maxItems": 10,
                                "minItems": 0,
                                "type": "array"
                            },
                            "slotConstraint": {
                                "description": "Specifies whether the slot is required or optional. ",
                                "enum": [
                                    "Required",
                                    "Optional"
                                ],
                                "type": "string"
                            },
                            "slotType": {
                                "description": "The type of the slot, either a custom slot type that you defined or one of the built-in slot types.",
                                "maxLength": 100,
                                "minLength": 1,
                                "pattern": "^((AMAZON\\.)_?|[A-Za-z]_?)+",
                                "type": "string"
                            },
                            "slotTypeVersion": {
                                "description": "The version of the slot type.",
                                "maxLength": 64,
                                "minLength": 1,
                                "pattern": "\\$LATEST|[0-9]+",
                                "type": "string"
                            },
                            "valueElicitationPrompt": {
                                "description": "The prompt that Amazon Lex uses to elicit the slot value from the user.",
                                "properties": {
                                    "maxAttempts": {
                                        "description": "The number of times to prompt the user for information.",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "messages": {
                                        "description": "An array of objects, each of which provides a message string and its type. You can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).",
                                        "items": {
                                            "description": "The message object that provides the message text and its type.",
                                            "properties": {
                                                "content": {
                                                    "description": "The text of the message.",
                                                    "maxLength": 1000,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "contentType": {
                                                    "description": "The content type of the message string.",
                                                    "enum": [
                                                        "PlainText",
                                                        "SSML",
                                                        "CustomPayload"
                                                    ],
                                                    "type": "string"
                                                },
                                                "groupNumber": {
                                                    "description": "Identifies the message group that the message belongs to. When a group is assigned to a message, Amazon Lex returns one message from each group in the response.",
                                                    "maximum": 5,
                                                    "minimum": 1,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "contentType",
                                                "content"
                                            ],
                                            "type": "object"
                                        },
                                        "maxItems": 15,
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "responseCard": {
                                        "description": "A response card. Amazon Lex uses this prompt at runtime, in the <code>PostText</code> API response. It substitutes session attributes and slot values for placeholders in the response card. For more information, see <a>ex-resp-card</a>. ",
                                        "maxLength": 50000,
                                        "minLength": 1,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "messages",
                                    "maxAttempts"
                                ],
                                "type": "object"
                            }
                        },
                        "required": [
                            "name",
                            "slotConstraint"
                        ],
                        "type": "object"
                    },
                    "maxItems": 100,
                    "minItems": 0,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}