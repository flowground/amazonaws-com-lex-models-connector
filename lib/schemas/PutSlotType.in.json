{
    "type": "object",
    "properties": {
        "name": {
            "required": true,
            "type": "string"
        },
        "Version": {
            "required": true,
            "type": "string"
        },
        "requestBody": {
            "example": {
                "description": "Available pizza sauces",
                "enumerationValues": [
                    {
                        "value": "red"
                    },
                    {
                        "value": "white"
                    }
                ],
                "name": "PizzaSauceType"
            },
            "properties": {
                "checksum": {
                    "description": "<p>Identifies a specific revision of the <code>$LATEST</code> version.</p> <p>When you create a new slot type, leave the <code>checksum</code> field blank. If you specify a checksum you get a <code>BadRequestException</code> exception.</p> <p>When you want to update a slot type, set the <code>checksum</code> field to the checksum of the most recent revision of the <code>$LATEST</code> version. If you don't specify the <code> checksum</code> field, or if the checksum does not match the <code>$LATEST</code> version, you get a <code>PreconditionFailedException</code> exception.</p>",
                    "type": "string"
                },
                "createVersion": {
                    "type": "boolean"
                },
                "description": {
                    "description": "A description of the slot type.",
                    "maxLength": 200,
                    "minLength": 0,
                    "type": "string"
                },
                "enumerationValues": {
                    "description": "<p>A list of <code>EnumerationValue</code> objects that defines the values that the slot type can take. Each value can have a list of <code>synonyms</code>, which are additional values that help train the machine learning model about the values that it resolves for a slot. </p> <p>When Amazon Lex resolves a slot value, it generates a resolution list that contains up to five possible values for the slot. If you are using a Lambda function, this resolution list is passed to the function. If you are not using a Lambda function you can choose to return the value that the user entered or the first value in the resolution list as the slot value. The <code>valueSelectionStrategy</code> field indicates the option to use. </p>",
                    "items": {
                        "description": "<p>Each slot type can have a set of values. Each enumeration value represents a value the slot type can take. </p> <p>For example, a pizza ordering bot could have a slot type that specifies the type of crust that the pizza should have. The slot type could include the values </p> <ul> <li> <p>thick</p> </li> <li> <p>thin</p> </li> <li> <p>stuffed</p> </li> </ul>",
                        "properties": {
                            "synonyms": {
                                "description": "Additional values related to the slot type value.",
                                "items": {
                                    "maxLength": 140,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "value": {
                                "description": "The value of the slot type.",
                                "maxLength": 140,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "value"
                        ],
                        "type": "object"
                    },
                    "maxItems": 10000,
                    "minItems": 1,
                    "type": "array"
                },
                "valueSelectionStrategy": {
                    "description": "<p>Determines the slot resolution strategy that Amazon Lex uses to return slot type values. The field can be set to one of the following values:</p> <ul> <li> <p> <code>ORIGINAL_VALUE</code> - Returns the value entered by the user, if the user value is similar to the slot value.</p> </li> <li> <p> <code>TOP_RESOLUTION</code> - If there is a resolution list for the slot, return the first value in the resolution list as the slot type value. If there is no resolution list, null is returned.</p> </li> </ul> <p>If you don't specify the <code>valueSelectionStrategy</code>, the default is <code>ORIGINAL_VALUE</code>.</p>",
                    "enum": [
                        "ORIGINAL_VALUE",
                        "TOP_RESOLUTION"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "X_Amz_Content_Sha256": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Date": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Algorithm": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Credential": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Security_Token": {
            "required": false,
            "type": "string"
        },
        "X_Amz_Signature": {
            "required": false,
            "type": "string"
        },
        "X_Amz_SignedHeaders": {
            "required": false,
            "type": "string"
        }
    }
}